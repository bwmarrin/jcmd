#!/bin/sh
#***************************** SCRIPT DESCRIPTION *****************************#
# FreeBSD Jail Commands by Bruce Marriner <bruce@sqls.net>
# A script for creating and working with FreeBSD jails.
#
# Jail Commands was wrote mostly from scratch however this script is influenced
# by the FreeBSD handbook and ezjail system and does contain a few snippets and 
# similarities from both of those sources.
#
# Jail Commands mini FAQ :
#
# Q) Why not just follow the Handbook?
# a) Because after a dozen jails (or maybe less) following the Handbook method 
# each time might become cumbersome for some.
#
# Q) Why not just use ezJail?
# a) Good question! ezJail is thoroughly tested, has more features, is better 
# supported, and is probably safer.  You should definitely give it a try. 
#
# Q) Wait, what? Why didn't you just use ezJail then?
# a) Well. I've always enjoyed "doing it myself" but there are a few reasons.
# 
# a1) I like understanding the "how and why" and when making Jail Commands I
# was able to learn a lot about how jails work and how to set them up. This was
# an educational experience for me and it was well worth the time invested.
#
# a2) ezJail is almost like a whole different jail system.  It uses it's own 
# configuration, rc scripts, and commands. I wanted to stick to using the 
# default FreeBSD configuration methods and command line tools where possible.
#
# a3) ezJail does not seem to work with existing jails made using the FreeBSD
# handbook method or the existing FreeBSD jail commands and I wanted a tool 
# that would.
#
# Q) What's your goal with Jail Commands?
# a) To expand upon the default FreeBSD jail commands and configuration methods
# with additional commands for creating and working with jails that work along 
# side the normal FreeBSD jail commands.


#********************************** LICENSE ***********************************#
# FreeBSD Jail Commands is licensed using the FreeBSD License.
# https://www.freebsd.org/copyright/freebsd-license.html
# http://en.wikipedia.org/wiki/BSD_licenses
#
# Copyright (c) 2013-2015, Bruce Marriner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer. 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies, 
# either expressed or implied, of the FreeBSD Project.




#***************************** DEFAULT SETTINGS   *****************************#
jcmd_cmd=`basename -- $0`
jcmd_version='.01'
jcmd_name='FreeBSD Jail Commands'            
jcmd_author='Bruce Marriner <bruce@sqls.net>'
jcmd_copyright="Copyright 2013-2015 ${jcmd_author}. All rights reserved."

jcmd_shell='csh'




#***************************** READ USER SETTINGS *****************************#
# Global config, overrides defaults.
[ -f /usr/local/etc/jcmd.conf ] && . /usr/local/etc/jcmd.conf

# User config, overrides defaults & global settings.
[ -f ~/.jcmdrc ] && . ~/.jcmdrc




#***************************** SCRIPT FUNCTIONS   *****************************#

#############################################################################
# Exit with Error
exerr () 
{ 
    echo -e "$*" >&2 ; 
    exit 1; 
}


#############################################################################
# FreeBSD Jail Commands - Build
# This function follows the FreeBSD handbook steps for building the userland.
# https://www.freebsd.org/doc/handbook/jails-build.html

jcmd-build () {
    [ $# -gt 0 ] || exerr ${jcmd_usage_build}

    while getopts j:w arg; do
        case ${arg} in
            j)  jcmd_build_opt="-j${OPTARG}"
                ;;
            w)  jcmd_build_world="YES"
                ;;
            ?) exerr ${jcmd_usage_build};;
        esac;
    done;

    [ $# -gt 0 ] || exerr ${jcmd_usage_build}

    echo "FreeBSD Jail Commands  -  Build"

    if [ "${jcmd_build_world}" = "YES" ]; then
        cd /usr/obj
        chflags -R noschg *
        rm -rf *

        cd /usr/src
        time make ${jcmd_build_opt} buildworld
    fi
    exit
}


#############################################################################
# Create a new jail.
jcmd-new () {
    [ $# -gt 0 ] || exerr ${jcmd_usage_new}

    while getopts fbidpr:s: arg; do
        case ${arg} in
            f)  jcmd_new_force="YES"
                ;;
            b)  jcmd_new_build="YES"
                ;;
            i)  jcmd_new_install="YES" 
                ;;
            d)  jcmd_new_dist="YES"
                ;;
            p)  jcmd_new_ports="YES"
                ;;
            r)  jcmd_new_root="${OPTARG}"
                ;;
            s)  jcmd_new_source="${OPTARG}"
                ;;
            ?) exerr ${jcmd_usage_new};;
        esac;
    done;
    shift $(( ${OPTIND} - 1 ))

    
    [ $# -gt 0 ] || exerr ${jcmd_usage_new}

    [ $jcmd_new_root ] || jcmd_new_root=${jcmd_jailhome}/$1

    echo Create a new jail in the following folder: $jcmd_new_root

    if [ "${jcmd_new_force}" != "YES" ]; then
        [ -d $jcmd_new_root ] && exerr "Target directory already exists. Use -f to override."
    fi

    if [ "${jcmd_new_build}" = "YES" ]; then
        echo Sorry, you need to use jcmd build for now.
    fi

    if [ "${jcmd_new_install}" = "YES" ]; then
        mkdir -p ${jcmd_new_root}
        [ -d $jcmd_new_root ] || exerr Unable to create target directory.
        cd /usr/src
        make installworld DESTDIR=${jcmd_new_root}
    fi

    if [ "${jcmd_new_dist}" = "YES" ]; then
        mkdir -p ${jcmd_new_root}
        [ -d $jcmd_new_root ] || exerr Unable to create target directory.
        cd /usr/src
        make distribution DESTDIR=${jcmd_new_root}
    fi

    if [ "${jcmd_new_ports}" = "YES" ]; then
        mkdir -p ${jcmd_new_root}/usr/ports
        portsnap -p ${jcmd_new_root}/usr/ports fetch extract
    fi

    echo "You must now create an appropriate /etc/jail.conf entry"
    echo "along with a /etc/fstab.jailname if required."
}




#############################################################################
# Remove an existing Jail
jcmd-rm () {

    [ $# -gt 0 ] || exerr ${jcmd_usage_rm}

    # Might need opts for jail rc.conf file
    # and fstab files that may also need to 
    # be removed.
    while getopts fz:r: arg; do
        case ${arg} in
            f)  jcmd_rm_force="YES"
                ;;
            r)  jcmd_rm_root="${OPTARG}"
                ;;
            ?) exerr ${jcmd_usage_new};;
        esac;
    done;
    shift $(( ${OPTIND} - 1 ))

    [ $jcmd_rm_root ] || jcmd_rm_root=$jcmd_jailhome/$1
    #don't really need jailname if root is given for now.
    #but we'll want it later :)
    #[ $# -gt 0 ] || exerr ${jcmd_usage_rm}

    [ -d $jcmd_rm_root ] || exerr Jailroot $jcmd_rm_root does not exist.

    chflags -R noschg $jcmd_rm_root
    rm -rfv $jcmd_rm_root
    
    echo "You must now delete any /etc/jail.conf entry"
    echo "along with any /etc/fstab.jailname if used."
}


#############################################################################
# FreeBSD Jail Commands - Sh (Shell)
# Starts a Jail.  Shortcut of jexec jailname csh

jcmd-sh () {
    [ $# -gt 0 ] || exerr ${jcmd_usage_sh}
    echo "FreeBSD Jail Commands  -  Sh (Shell)"
    [ $# -gt 0 ] || exerr ${jcmd_usage_sh}

    # TODO: Check if jail is already running?
    
    jexec $1 ${jcmd_shell}
}


#############################################################################
# FreeBSD Jail Commands - Start
# Starts a Jail.  Shortcut of service jail start jailname

jcmd-start () {
    [ $# -gt 0 ] || exerr ${jcmd_usage_start}
    echo "FreeBSD Jail Commands  -  Start"
    [ $# -gt 0 ] || exerr ${jcmd_usage_start}

    # TODO: Check if jail is already running?
    
    service jail start $1
}



#############################################################################
# FreeBSD Jail Commands - Stop
# Stops a Jail.  Shortcut of service jail stop jailname

jcmd-stop () {
    [ $# -gt 0 ] || exerr ${jcmd_usage_stop}
    echo "FreeBSD Jail Commands  -  Stop"
    [ $# -gt 0 ] || exerr ${jcmd_usage_stop}

    # TODO: Check if jail is already running?
    
    service jail stop $1
}




#***************************** PARSE RUN COMMAND  *****************************#
# Check executed command for function to run else
# check command like arguemnts for fuction to run
if [ $jcmd_cmd != "jcmd" ]
then
    jcmd_run=jcmd-${jcmd_cmd#j}
    jcmd_usage=""
elif [ $# -gt 0 ]
then
    jcmd_run=jcmd-$1
    jcmd_usage=$1
    shift
fi


#***************************** USER HELP MESSAGES *****************************#
jcmd_usage_header="
    \n${jcmd_cmd} - ${jcmd_name} version ${jcmd_version} \
    \n${jcmd_copyright} \
    \n"

jcmd_usage_jcmd="${jcmd_usage_header}
    \nUsage: ${jcmd} [start|stop|build|new|rm] {params} \
    \n\tstart\t- start a new jail \
    \n\tstop\t- stop a new jail \
    \n\tbuild\t- create a new jail \
    \n\tnew\t- create a new jail \
    \n\trm\t- remove a jail \
    \n"

jcmd_usage_start="${jcmd_usage_header}
    \nUsage: ${jcmd_cmd} ${jcmd_usage} jailname \
    \n\tjailname\t- name of the jail
    \n"

jcmd_usage_stop="${jcmd_usage_header}
    \nUsage: ${jcmd_cmd} ${jcmd_usage} jailname \
    \n\tjailname\t- name of the jail
    \n"

jcmd_usage_build="${jcmd_usage_header}
    \nUsage: ${jcmd_cmd} ${jcmd_usage} [-j] \
    \n\t-j\t\t- threads to use \
    \n\t-w\t\t- buildworld \
    \n"
jcmd_usage_new="${jcmd_usage_header}
    \nUsage: ${jcmd_cmd} ${jcmd_usage} [-fidp] [-r path] jailname \
    \n\t-f\t\t- force \
    \n\t-i\t\t- make installworld \
    \n\t-d\t\t- make distribution \
    \n\t-p\t\t- install ports tree \
    \n\t-r path\t\t- use the specified path for the jailroot \
    \n\tjailname\t- name of the jail
    \n"

jcmd_usage_rm="${jcmd_usage_header}
    \nUsage: ${jcmd_cmd} ${jcmd_usage} [-r path] [jailname] \
    \n\t-r path\t\t- path of jailroot \
    \n\tjailname\t- name of the jail
    \n"




#***************************** RUN FUNCTION       *****************************#
[ $jcmd_run ] || exerr ${jcmd_usage_jcmd}
$jcmd_run $@




#***************************** EXIT NORMALLY      *****************************#
echo FreeBSD Jail Commands Exiting Normally.
exit 0
